{
	"name": "pyz80",
	"displayName": "pyz80 Assembler",
	"description": "Build SAM Coup√© programs in Visual Studio Code",
	"version": "1.4.2",
	"publisher": "simonowen",
	"icon": "images/icon.png",
	"license": "MIT",
	"author": {
		"name": "Simon Owen",
		"url": "https://github.com/simonowen"
	},
	"engines": {
		"vscode": "^1.50.1"
	},
	"categories": [
		"Programming Languages"
	],
	"homepage": "https://github.com/simonowen/vscode-pyz80",
	"bugs": {
		"url": "https://github.com/simonowen/vscode-pyz80/issues"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/simonowen/vscode-pyz80.git"
	},
	"keywords": [
		"z80",
		"pyz80",
		"sam coupe"
	],
	"activationEvents": [
		"onLanguage:pyz80"
	],
	"main": "./extension",
	"contributes": {
		"configuration": {
			"title": "pyz80",
			"type": "object",
			"properties": {
				"pyz80.path": {
					"type": "string",
					"default": "",
					"description": "Path to custom pyz80.py (or blank for built-in version)"
				},
				"pyz80.extraopts": {
					"type": "string",
					"default": "",
					"description": "Additional command-line options for pyz80.py"
				},
				"pyz80.python": {
					"type": "string",
					"default": "",
					"description": "Path to Python interpreter (or blank for VS Code default)"
				},
				"pyz80.simcoupe": {
					"type": "string",
					"default": "",
					"description": "Path to SimCoupe for Build and Run (or blank for installed version)"
				},
				"pyz80.samdisk": {
					"type": "string",
					"default": "",
					"description": "Path to SAMdisk v4 for network launch to TrinLoad (or blank for path version)"
				},
				"pyz80.samdos": {
					"type": "string",
					"default": "",
					"description": "Path to custom SAMDOS binary (or blank for built-in samdos2 image)"
				},
				"pyz80.mainfile": {
					"type": "string",
					"default": "",
					"description": "Main source filename to assemble (or blank for active source file)"
				},
				"pyz80.autosave": {
					"type": "boolean",
					"default": "true",
					"description": "If true (default), save modified documents before assembling"
				},
				"pyz80.prebuild": {
					"type": "string",
					"default": "",
					"description": "Shell command to run before the assembler"
				},
				"pyz80.postbuild": {
					"type": "string",
					"default": "",
					"description": "Shell command to run after the assembler"
				}
			}
		},
		"configurationDefaults": {
			"[pyz80]": {
				"editor.detectIndentation": false,
				"editor.quickSuggestions": {
					"other": false,
					"comments": false,
					"strings": false
				}
			}
		},
		"keybindings": [
			{
				"key": "f10",
				"command": "pyz80.build",
				"when": "editorLangId == pyz80"
			},
			{
				"key": "ctrl-f10",
				"command": "pyz80.run",
				"when": "editorLangId == pyz80"
			},
			{
				"key": "ctrl-shift-f10",
				"command": "pyz80.net",
				"when": "editorLangId == pyz80"
			}
		],
		"commands": [
			{
				"command": "pyz80.build",
				"title": "pyz80: Assemble Z80 source file"
			},
			{
				"command": "pyz80.run",
				"title": "pyz80: Assemble and launch with SimCoupe"
			},
			{
				"command": "pyz80.net",
				"title": "pyz80: Assemble and network send to TrinLoad"
			}
		],
		"languages": [
			{
				"id": "pyz80",
				"aliases": [
					"Z80",
					"pyz80"
				],
				"extensions": [
					".asm",
					".z80",
					".z80s",
					".s"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "pyz80",
				"scopeName": "source.pyz80",
				"path": "./syntaxes/Z80.tmLanguage"
			}
		],
		"snippets": [
			{
				"language": "pyz80",
				"path": "./snippets/pyz80.json"
			}
		],
		"problemMatchers": [
			{
				"name": "pyz80",
				"label": "pyz80 Assembler Output",
				"owner": "pyz80",
				"fileLocation": [
					"relative",
					"${workspaceFolder}"
				],
				"pattern": {
					"regexp": "^(.*):(\\d+)\\s+(error|warning):\\s+(.*)",
					"file": 1,
					"line": 2,
					"severity": 3,
					"message": 4
				}
			}
		]
	}
}
